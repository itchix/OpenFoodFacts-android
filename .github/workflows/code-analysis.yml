# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#
# Scans are triggered:
# 1. On every push to default and protected branches
# 2. On every Pull Request targeting the default branch
# 3. On a weekly schedule
# 4. Manually, on demand, via the "workflow_dispatch" event
#
# The workflow should work with no modifications, but you might like to use a
# later version of the Detekt CLI by modifing the $DETEKT_RELEASE_TAG
# environment variable.


name: Code static analysis

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ develop, master, release/* ]

  pull_request:
    branches: [ develop ]

  schedule:
    - cron: '0 5 * * 1'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Release tag associated with version of Detekt to be installed
  # SARIF support (required for this workflow) was introduced in Detekt v1.15.0
  DETEKT_RELEASE_TAG: 1.18.0

jobs:
  detekt:
    name: Detekt
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup detekt
        uses: peter-murray/setup-detekt@v1
        with:
          detekt_version: ${{ env.DETEKT_RELEASE_TAG }}

      # Performs static analysis using Detekt
      - name: Run Detekt
        continue-on-error: true
        run: |
          detekt --input ${{ github.workspace }} --report sarif:${{ github.workspace }}/detekt.sarif.json

      # Uploads results to GitHub repository using the upload-sarif action
      - uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: ${{ github.workspace }}/detekt.sarif.json
          checkout_path: ${{ github.workspace }}

  semgrep:
    name: Semgrep
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: returntocorp/semgrep-action@v1
        with:
          # more at semgrep.dev/explore
          config: >-
            p/security-audit
            p/secrets
          generateSarif: "1"

      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: semgrep.sarif
        if: always()
